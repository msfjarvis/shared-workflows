name: Test Rust project

on:
  workflow_call:
    secrets:
      github-token:
        required: false

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-11
          - ubuntu-latest
          - windows-latest
        rust:
          - beta
          - nightly
          - stable

    steps:
    - name: Checkout repository
      uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f

    - name: Install Rust toolchain (Unix)
      if: runner.os != 'Windows'
      shell: bash
      run:
        curl https://sh.rustup.rs -sSf | sh -s -- --profile default --default-toolchain ${{ matrix.rust }} -y

    - name: Install rust toolchain (Windows)
      if: runner.os == 'Windows'
      shell: bash
      run: |
        curl https://static.rust-lang.org/rustup/dist/x86_64-pc-windows-msvc/rustup-init.exe -o rustup-init.exe
        ./rustup-init --profile default --default-toolchain ${{ matrix.rust }} -y

    - name: Cache cargo registry and build outputs
      uses: actions/cache@26968a09c0ea4f3e233fdddbafd1166051a095f6
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/bin
          target
        key: ${{ runner.os }}-cargo-${{ matrix.rust }}-${{ hashFiles('Cargo.lock') }}

    - name: Check formatting
      uses: actions-rs/cargo@844f36862e911db73fe0815f00a4a2602c279505
      with:
        command: fmt
        args: -- --check

    - name: Run cargo check
      uses: actions-rs/cargo@844f36862e911db73fe0815f00a4a2602c279505
      with:
        command: check
        args: --all-features

    - name: Run cargo test
      uses: actions-rs/cargo@844f36862e911db73fe0815f00a4a2602c279505
      with:
        command: test
        args: --all-features

    - name: Run cargo deny
      shell: bash
      run: |
        if [ -f deny.toml ]; then
          [[ -e "${HOME}/.cargo/bin/cargo-deny" ]] || cargo install cargo-deny --locked
          cargo deny check
        else
          # Simulate success because we don't care
          exit 0
        fi
